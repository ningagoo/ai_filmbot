from aiogram import Router, types, F
from aiogram.enums import ParseMode
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, FSInputFile
from bot.utils.subscription import check_subscription
from bot.utils.data_loader import get_movie_by_code
from bot.config import config
import os

router = Router()

def get_subscribe_keyboard():
    if not config.CHANNEL_LINKS:
        return None
    keyboard = [
        [InlineKeyboardButton(text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=link)]
        for link in config.CHANNEL_LINKS
    ]
    keyboard.append([InlineKeyboardButton(text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_subs")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

@router.message(F.text)
async def handle_code(message: types.Message):
    user_id = message.from_user.id
    is_subscribed = await check_subscription(message.bot, user_id, config.CHANNEL_IDS)

    if not is_subscribed:
        return await message.answer(
            "‚ùå –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –∫–∞–Ω–∞–ª—ã —Å–ø–æ–Ω—Å–æ—Ä–æ–≤:",
            reply_markup=get_subscribe_keyboard()
        )

    code = message.text.strip()
    movie = get_movie_by_code(code)

    if not movie:
        return await message.answer("üòï –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π.")

    text = f"<b>{movie['title']}</b>\n\n{movie.get('description', '')}"
    photo_path = movie.get("photo")

    if photo_path and os.path.exists(photo_path):

        photo_file = FSInputFile(photo_path)
        await message.answer_photo(photo=photo_file, caption=text, parse_mode=ParseMode.HTML)
    else:
        await message.answer(text, parse_mode=ParseMode.HTML)

@router.callback_query(F.data == "check_subs")
async def check_subs_callback(callback: CallbackQuery):
    is_subscribed = await check_subscription(callback.bot, callback.from_user.id, config.CHANNEL_IDS)

    if not is_subscribed:
        await callback.answer("‚ùå –í—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!", show_alert=True)
    else:
        await callback.message.edit_text("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –∏ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–ª—å–º/–∞–Ω–∏–º–µ/—Å–µ—Ä–∏–∞–ª.")
        await callback.answer()